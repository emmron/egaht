<!-- Example: Secure form with automatic CSRF protection -->
<template>
  <div class="secure-form-container">
    <h2>Secure Contact Form</h2>
    <p>This form is automatically protected against CSRF attacks</p>
    
    <!-- Form will automatically get CSRF token added by client-side protection -->
    <form method="post" action="/submit-contact" class="contact-form">
      <div class="form-group">
        <label for="name">Name:</label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          value="{formData.name}"
          required 
        />
      </div>
      
      <div class="form-group">
        <label for="email">Email:</label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          value="{formData.email}"
          required 
        />
      </div>
      
      <div class="form-group">
        <label for="message">Message:</label>
        <textarea 
          id="message" 
          name="message" 
          rows="5"
          required
        >{formData.message}</textarea>
      </div>
      
      <div class="form-actions">
        <button type="submit" @click={handleSubmit}>
          Send Message
        </button>
        <button type="button" @click={resetForm}>
          Reset
        </button>
      </div>
    </form>
    
    {#if submitStatus === 'success'}
      <div class="success-message">
        Message sent successfully!
      </div>
    {/if}
    
    {#if submitStatus === 'error'}
      <div class="error-message">
        Failed to send message. Please try again.
      </div>
    {/if}
  </div>
</template>

<script>
  let formData = {
    name: '',
    email: '',
    message: ''
  };
  
  let submitStatus = null;
  
  function handleSubmit(event) {
    event.preventDefault();
    
    // Manual fetch example with automatic CSRF protection
    fetch('/submit-contact', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        // CSRF token will be automatically added by client-side protection
      },
      body: JSON.stringify(formData)
    })
    .then(response => {
      if (response.ok) {
        submitStatus = 'success';
        resetForm();
      } else {
        submitStatus = 'error';
      }
    })
    .catch(() => {
      submitStatus = 'error';
    });
  }
  
  function resetForm() {
    formData = {
      name: '',
      email: '',
      message: ''
    };
    submitStatus = null;
  }
</script>

<style scoped>
  .secure-form-container {
    max-width: 600px;
    margin: 2rem auto;
    padding: 2rem;
    border: 1px solid #ddd;
    border-radius: 8px;
    background: #fff;
  }
  
  .contact-form {
    margin-top: 1.5rem;
  }
  
  .form-group {
    margin-bottom: 1rem;
  }
  
  label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: #333;
  }
  
  input, textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
  }
  
  input:focus, textarea:focus {
    outline: none;
    border-color: #007acc;
    box-shadow: 0 0 0 2px rgba(0, 122, 204, 0.2);
  }
  
  .form-actions {
    display: flex;
    gap: 1rem;
    margin-top: 1.5rem;
  }
  
  button {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.2s;
  }
  
  button[type="submit"] {
    background: #007acc;
    color: white;
  }
  
  button[type="submit"]:hover {
    background: #005a9e;
  }
  
  button[type="button"] {
    background: #f5f5f5;
    color: #666;
  }
  
  button[type="button"]:hover {
    background: #e5e5e5;
  }
  
  .success-message {
    margin-top: 1rem;
    padding: 1rem;
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
    border-radius: 4px;
  }
  
  .error-message {
    margin-top: 1rem;
    padding: 1rem;
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
    border-radius: 4px;
  }
</style>